@inject ILocalizer _loc
@model SimpleIdentityViewModel

"use strict";
(function() {

function validEmail(addr) {
	// from chromium ? https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript
	const EMAIL_REGEXP= /^(([^<>()\[\]\.,;:\s@@\"]+(\.[^<>()\[\]\.,;:\s@@\"]+)*)|(\".+\"))@@(([^<>()[\]\.,;:\s@@\"]+\.)+[^<>()[\]\.,;:\s@@\"]{2,})$/i;
	return addr === '' || EMAIL_REGEXP.test(addr);
}

new Vue({
el:"#app",
data: {
	email:'',
	password:'',
	confirm:'',
	submitted: false,
	serverError: '',
	mode: ''
},
computed: {
	emailVisible() { return this.mode === ''; },
	codeVisible() { return this.mode === 'code'; },
	passwordVisible() { return this.mode === 'password';},
	invalidEmail() {
		if (!this.submitted) return false;
		return !!this.emailError;
	},
	invalidPassword() {
		if (!this.submitted) return false;
		return !this.password;
	},
	emailError() {
		if (!this.submitted) return '';
		if (!this.email) return '@Html.Raw(_loc["EnterEMail"])';
		if (!validEmail(this.email)) return '@Html.Raw(_loc["InvalidEMail"])';
	},
	valid() {
		return !this.invalidEmail && !this.invalidPassword;
	}
},
methods: {
	sendMail() {
		this.submitted = true;
		if (this.emailError) return;
		let formData = new URLSearchParams();
		formData.append('Login', this.email);
		formData.append('__RequestVerificationToken', '@Model?.RequestToken');
		alert('yet not implemented');
	},
	async submit() {
		this.submitted = true;
		if (!this.valid) return;
		let formData = new URLSearchParams();
		formData.append('Login', this.email);
		formData.append('Password', this.password);
		formData.append('__RequestVerificationToken', '@Model?.RequestToken');
		let resp = await fetch('/account/forgotpassword', {
			method: 'POST',
			body: formData
		});
		if (resp.redirected)
			window.location.assign(resp.url);
		else if (resp.ok) {
			let result = await resp.json();
			if (result.success)
				this.success(result.message);
			else
				this.fail(result.message);
		}
	}
}
});
})();
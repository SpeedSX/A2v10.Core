@inject ILocalizer _localizer
@{
	Layout = null;
	
	var pageGuid = "el" + Guid.NewGuid().ToString();

	String? Localize(String key) => _localizer.Localize(key);
}
<div class=modal id="@pageGuid" v-modal-width="{cssClass:'modal-small'}">
	<div class=modal-header v-drag-window>
		<span>@Localize("@[SetNewPassword]")</span>
		<button class=btnclose v-on:click.prevent="modalClose(false)">&#x2715;</button>
	</div>
	<div class="modal-content overflow">
		<div class=grid style="grid-template-columns:1fr;margin-bottom:1rem">
			<static label="@Localize("@[User]")" :text="User.Name" style="grid-row:1"></static>
			<textbox label="@Localize("@[OldPassword]")" :password=true :tab-index=1 :item=User prop="OldPassword" style="grid-row:2"></textbox>
			<textbox label="@Localize("@[NewPassword]")" :password=true :tab-index=2 :item=User prop="NewPassword" style="grid-row:3"></textbox>
			<textbox label="@Localize("@[Confirm]")" :password=true :tab-index=3 :item=User prop="ConfirmPassword" style="grid-row:4"></textbox>
		</div>
	</div>
	<div class=modal-footer>
		<div class=aligner></div>
		<button class="btn btn-primary a2-inline" v-on:click.prevent=doChangePassword v-settabindex
				:disabled=isInvalid>@Localize("@[SetPassword]")</button>
		<button class="btn a2-inline" v-on:click.prevent="modalClose(false)" v-settabindex>@Localize("@[Cancel]")</button>
	</div>
</div>
<script type="text/javascript">
(function () {

	'use strict';

	const eventBus = require('std:eventBus');

    const vm = new Vue({
        el: "#@pageGuid",
        data: {
            User: {
                Name: 'UserName here',
                OldPassword: '',
                NewPassword: '',
                ConfirmPassword: ''
			}
		},
		computed: {
			locale() {
				return window.$$locale;
			},
            isInvalid() {
                return false;
			}
		},
		methods: {
            doChangePassword() {
                alert('do change password');
			},
			modalClose(result) {
				eventBus.$emit('modalClose', result);
			}
		}
	});
})();
</script>
